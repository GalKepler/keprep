name: build
on: [push, pull_request]
jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "check"
            python: "3.11"
            toxpython: "python3.11"
            tox_env: "check"
            os: "ubuntu-latest"
          - name: "docs"
            python: "3.11"
            toxpython: "python3.11"
            tox_env: "docs"
            os: "ubuntu-latest"
          - name: "py310 (ubuntu)"
            python: "3.10"
            toxpython: "python3.10"
            python_arch: "x64"
            tox_env: "py310"
            os: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.python_arch }}
      - name: install dependencies
        run: |
          python -mpip install --progress-bar=off .
          pip --version
          tox --version
          pip list --format=freeze
      - name: test
        env:
          TOXPYTHON: "${{ matrix.toxpython }}"
        run: >
          tox -e ${{ matrix.tox_env }} -v

  upload-coverage:
    name: Upload coverage reports to Code Climate
    runs-on: ubuntu-latest
    needs: test
    if: ${{ always() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov codeclimate-test-reporter
          pip install .  # Install your package

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV

      - name: Verify directory structure
        run: |
          echo "Verifying directory structure:"
          ls -R src/keprep

      - name: Display .coveragerc
        run: |
          echo "Displaying .coveragerc content:"
          cat .coveragerc

      - name: Run tests and collect coverage
        run: |
          mkdir -p reports
          pytest --cov-report term-missing:skip-covered --cov-report xml:reports/coverage.xml --cov-report html:reports/htmlcov --cov=src/keprep --cov-branch tests/ --verbose

      - name: Check coverage file
        run: |
          echo "Checking coverage file:"
          cat reports/coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: reports/coverage.xml
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Upload coverage to Code Climate
        uses: paambaati/codeclimate-action@v8.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
